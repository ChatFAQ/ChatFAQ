---
name: ChatFAQ

databases:
  - name: psql
    cluster_name: "chatfaq-psql-dev"
    db_name: "{{ deployment_key }}"
    db_user: "{{ deployment_key }}"
    engine: pg
    version: "15"
  - name: redis
    cluster_name: 'chatfaq-redis-{{ production("prod", default="dev") }}'
    engine: redis
    version: "7"
env:
  - name: sentry
    variables:
      SENTRY_DSN: '{{ secret("SENTRY_DSN") }}'
  - name: django
    variables:
      BASE_URL: '{{ APP_URL }}'
      SECRET_KEY: '{{ secret("SECRET_KEY") }}'
      SENTRY_ENVIRONMENT: "{{ back.component_key }}"
      ENVIRONMENT: "{{ deployment_key }}"
      DATABASE_URL: "{{ psql.DATABASE_URL }}"
      AWS_ACCESS_KEY_ID: '{{ secret("AWS_ACCESS_KEY_ID") }}'
      AWS_SECRET_ACCESS_KEY: '{{ secret("AWS_SECRET_ACCESS_KEY") }}'
      AWS_STORAGE_BUCKET_NAME: '{{ get("AWS_STORAGE_BUCKET_NAME") }}'
      DO_REGION: 'ams3'
      STORAGES_MODE: do
      STORAGE_MAKE_FILES_PUBLIC: no
      OPENAI_API_KEY: '{{ secret("OPENAI_API_KEY") }}'
      HUGGINGFACE_KEY: '{{ secret("HUGGINGFACE_KEY") }}'
      REDIS_URL: '{{ redis.REDIS_URL }}'
  - name: widget
    variables:
      SENTRY_ENVIRONMENT: "{{ widget.component_key }}"
      NUXT_PUBLIC_CHATFAQ_API: "{{ APP_URL }}"
      NUXT_PUBLIC_CHATFAQ_WS: "wss://{{ APP_DOMAIN }}"
  - name: sdk
    variables:
      SENTRY_ENVIRONMENT: "{{ sdk.component_key }}"
      CHATFAQ_BACKEND_WS: "wss://{{ APP_DOMAIN }}"
      CHATFAQ_TOKEN: '{{ secret("CHATFAQ_TOKEN") }}'

images:
  - name: widget
    build_context: widget
  - name: back
    build_context: back
  - name: sdk
    build_context: sdk

services:
  - name: widget
    image: widget
    envs: [ sentry, widget ]
    instance_size: XXS
    port: 3000
  - name: back
    image: back
    envs: [ sentry, django ]
    instance_size: XS
    port: 8000
    route_prefixes:
      - "/back"

workers:
  - name: fsm_llm
    image: sdk
    envs: [ sentry, sdk ]
    instance_size: XS
  - name: celery_worker
    image: back
    envs: [ sentry, django ]
    instance_size: M
    command: modelw-docker run python -m celery -A back.config worker -l INFO --pool solo

jobs:
  - name: migrate
    when: PRE_DEPLOY
    image: back
    envs: [ sentry, django ]
    command: modelw-docker run python manage.py migrate
    instance_size: XXS
